

const txtFieldState = {
  value: "",
  valid: true,
  typeMismatch: false,
  errMsg: "" 
};

const ErrorValidationLabel = ({ txtLbl }) => (
  <label htmlFor="" style={{ color: "white" }}>
    {txtLbl}
  </label>
);


class LoginForm extends React.Component {
  constructor(props){
    super(props);
  this.state = {
    email: {
      ...txtFieldState,
      fieldName: "Your Email Address *",
      required: true,
      requiredTxt: "Please enter a valid email address",
      formatErrorTxt: "Please enter a valid email address"
    },
 Interest:'',
      loading:false,
    allFieldsValid: false,
   inputFieldText: false
  };
    this.handleChange = this.handleChange.bind(this);
 }
  handleChange(event) {
    this.setState({Interest: event.target.value});
  }

  reduceFormValues = formElements => {
    
    const arrElements = Array.prototype.slice.call(formElements); 


    const formValues = arrElements
      .filter(elem => elem.name.length > 0)
      .map(x => {
        const { typeMismatch } = x.validity;
        const { name, type, value } = x;

        return {
          name,
          type,
          typeMismatch, 
          value,
          valid: x.checkValidity()
        };
      })
      .reduce((acc, currVal) => {
        
        const { value, valid, typeMismatch, type } = currVal;
        const { fieldName, requiredTxt, formatErrorTxt } = this.state[
          currVal.name
        ]; 

        
        acc[currVal.name] = {
          value,
          valid,
          typeMismatch,
          fieldName,
          requiredTxt,
          formatErrorTxt
        };

        return acc;
      }, {});

    return formValues;
  };

  checkAllFieldsValid = formValues => {
    return !Object.keys(formValues)
      .map(x => formValues[x])
      .some(field => !field.valid);
  };


  handleSubmit = e => {
    e.preventDefault();
     this.setState({ loading: true });
   
       const form = e.target;
       const formValues = this.reduceFormValues(form.elements);
       const allFieldsValid = this.checkAllFieldsValid(formValues);


    if (!allFieldsValid){
        setTimeout(() => {
          
      this.setState({ loading: false,...formValues, inputFieldText: true});
    }, 0);
    }{
      
       setTimeout(() => {
    
      this.setState({ loading: false,allFieldsValid, ...formValues });
    }, 2000);
    }

  };

  render() {
    const { email, firstname, lastname, allFieldsValid, loading } = this.state;
    const successFormDisplay = allFieldsValid ? "block" : "none";
    const inputFormDisplay = !allFieldsValid ? "block" : "none";

    const renderEmailValidationError = email.valid ? (
      ""
    ) : (
      <ErrorValidationLabel
        txtLbl={email.typeMismatch ? email.formatErrorTxt : email.requiredTxt}
      />
        )
     const styleBackground ={
     backgroundColor:"black"
    }
     const ErrorInput = {
            borderColor: "red"
       }
     
     console.log(`Email Address: ${this.state.email.value} \nYour Interest :${this.state.Interest}` )
   
    return (
        <section style={styleBackground}id="loginform">
      <>
         <div id="align-sucess" style={{ display: successFormDisplay }}>
           <div id="text-heading">
            INTERNSHIP SIGNUP FORM
          </div>
           <br/>
           < div id="line"/>
           <br/>
            <br/>
            <div id="sucess">
              Thanks for your interest
            </div>
            <br/>
            <div id="text-paragraph">
             <p>We will review your application and contact you for additional information should your background and expericence meet the requirements of one of our openings.</p>
            </div>
        </div>
        <div style={{ display: inputFormDisplay }}>
        
          <form
            onSubmit={this.handleSubmit}
            noValidate
          >
             <div id="text-heading">
           INTERNSHIP SIGNUP FORM
          </div>
          <br/>
          < div id="line"/>
          <br/>
         <div id="text-paragraph">
            <p>Prepare for your career with a Project Management, Web-Development, Graphic design, or Digital
              Marketing Internship at Northern.</p>
         </div>
            <br/>
            <div>
              <span>{renderEmailValidationError}</span>
              <br/>
             
              {this.state.inputFieldText ? <input id="input-email" type="email" style={ErrorInput}  name="email" placeholder="Your Email Address *" required/>:
              <input id="input-email" type="email"  name="email"  placeholder="Your Email Address *" required/>}
              
              
           <select id="Interest" placeholder="Your interest" onChange ={this.handleChange} >
                <option value="" disabled selected hidden>Your interest</option>
                <option value="Project Management">Project Management</option>
                <option value="Web-Development">Web-Development</option>
                <option value="Graphic design">Graphic design</option>
                <option value="Digital Marketing">Digital Marketing</option>
          </select>
            

            <button  type="submit" className="btn" disabled={loading} >
          {loading && (
            <i
              style={{ marginRight: "5px" }}
            />
          )}
          {loading && <span>Submitting...</span>}
          {!loading && <span>Sign Up Now &nbsp;<i class="caret"></i></span>}
        </button>
            </div>
          </form>
    
        </div>
      </>
      </section>
    );
  }
}


ReactDOM.render(<LoginForm />, document.getElementById("App"));

